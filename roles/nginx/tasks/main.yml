---    
# Install system packages and create logging paths
- import_tasks: base.yml

# Clean up configuration with remove attribute
- import_tasks: cleanup.yml

# Main workflow
- name: Install nginx configuration file
  when: 
    - nginx.config is defined
    - item.remove|d(False) == False
  become: yes
  notify: restart nginx
  template: >
    src={{ item.config_template }}
    dest=/etc/nginx/sites-enabled/{{ project_name }}-{{ item.name }}.conf
    force=yes
  with_items: "{{ nginx.config }}"
  tags:
    - deploy

- name: Install nginx parent configuration file
  when: 
    - nginx.parent_config is defined
    - item.remove|d(False) == False
  become: yes
  template: >
    src={{ item.config_template }}
    dest=/etc/nginx/sites-enabled/{{ parent_project_name }}-{{ item.name }}.conf
    force=yes
  with_items: "{{ nginx.parent_config }}"
  tags:
    - deploy

- name: Copy nginx child configuration file
  when: 
    - nginx.config is defined
    - nginx.parent_config is defined
    - item.remove|d(False) == False
  become: yes
  copy: > 
    remote_src=yes
    src=/etc/nginx/sites-enabled/{{ project_name }}-{{ item.name }}.conf
    dest=/etc/nginx/{{ parent_project_name }}/{{ project_name }}-{{ item.name }}.conf
    force=yes
  with_items: "{{ nginx.config }}"
  tags:
    - deploy

- name: Remove old nginx child configuration file
  when: 
    - nginx.config is defined
    - nginx.parent_config is defined
    - item.remove|d(False) == False
  become: yes
  notify: restart nginx
  file: >
    path=/etc/nginx/sites-enabled/{{ project_name }}-{{ item.name }}.conf
    state=absent
  with_items: "{{ nginx.config }}"
  tags:
    - deploy
