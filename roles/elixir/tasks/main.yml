---
- name: sh env
  ansible.builtin.shell:
  args:
    cmd: "{{ shenv_cmd }}"
    chdir: '{{ ansible_user_dir }}/'
  register: shenv
  tags:
    - setup

- name: asdf plugin add elixir
  ansible.builtin.shell: |
    {{ source }}
    asdf plugin add elixir
  args:
    executable: '{{ ansible_user_shell }}'
  register: result
  failed_when: result.rc != 0 and result.stderr | regex_search('(Plugin named .* already added)') == '' 
  vars:
    source: "{{ shenv.stdout_lines | map('regex_replace', '(^)', '. ') | join('\n') }}"
  when: elixir_version is defined
  tags:
    - setup

- name: asdf install elixir
  ansible.builtin.shell: |
    {{ source }}
    asdf install elixir {{ elixir_version | quote }}
  args:
    executable: '{{ ansible_user_shell }}'
  register: result
  vars: 
    source: "{{ shenv.stdout_lines | map('regex_replace', '(^)', '. ') | join('\n') }}"
  when: elixir_version is defined
  tags:
    - setup

- name: show result
  debug:
    var: result

- name: asdf install elixir
  ansible.builtin.shell: |
    {{ source }}
    asdf global elixir {{ elixir_version | quote }}
  args:
    executable: '{{ ansible_user_shell }}'
  vars: 
    source: "{{ shenv.stdout_lines | map('regex_replace', '(^)', '. ') | join('\n') }}"
  when: elixir_version is defined
  tags:
    - setup
